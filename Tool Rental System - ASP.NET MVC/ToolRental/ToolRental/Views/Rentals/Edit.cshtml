@model ToolRental.ViewModels.CreateOrEditRentalViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@*<script>
    var model = @Html.Raw(Json.Encode(Model));
    window.onload = loadfunction;

    function loadfunction() {
        if (model.returned) {
            alert('test');
        }

    }
</script>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Rental</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.LabelFor(model => model.Customers.Where(c => c.CustomerId == model.CustomerId).FirstOrDefault().CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @*@Html.Label(Model.Customers.Where(c => c.CustomerId == Model.CustomerId).FirstOrDefault().CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })*@

                @Html.DropDownListFor(m => m.result, new SelectList(Model.Customers, "CustomerId", "CustomerName",Model.CustomerId),new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRented, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateRented, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateRented, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div class="form-group">
        @{
            if (Model.returned)
            {
                <a href="@Url.Action("AddTools", "Rentals")" class="btn btn-default" disabled>
                    <i class="fas fa-plus-square"></i> Add
                </a>
            }
            else
            {
                <a href="@Url.Action("AddTools", "Rentals")" class="btn btn-default">
                    <i class="fas fa-plus-square"></i> Add
                </a>
            }
        }
        <h4>Rental Items</h4>
        <table class="table">
            <thread>
                <tr>
                    <th>
                        Tool Id
                    </th>
                    <th>
                        Tool Name
                    </th>
                    <th>
                    </th>
                </tr>
            </thread>

            @foreach (var item in Model.RentalTools)
            {
                <tr>
                    <td>
                        @item.ToolId
                    </td>
                    <td>
                        @item.ToolName
                    </td>
                    <td>
                        @{
                            if (Model.returned)
                            {
                                <a href="@Url.Action("AddTools", "Rentals")" class="btn btn-default" disabled>
                                    <i class="fas fa-minus-circle"></i> Remove
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("DeleteRentedTool", "Rentals", new { Id = item.ToolId })" class="btn btn-default">
                                    <i class="fas fa-minus-circle"></i> Remove
                                </a>
                            }
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
