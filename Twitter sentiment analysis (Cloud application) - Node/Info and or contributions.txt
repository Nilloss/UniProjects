This was two person team project for the unit 'Cloud Computing' in my final semester. The task was to take a scenario ( in this instance twitter sentiment analysis ) and design a cloud application that uses persistence and scaling. I was responsible for the 'back end' of the project which was essentially most of technical design that the project was based on and these three node applications were all written by me.

Traffic Handler:
This application was designed to stream in a twitter tweet stream based on a selection of filters as handled by the client application (not included in this repository as it was my partners work) and direct the unprocessed tweets to a redis cache as a temp store for the workers to access. It was responsible for handling client requests and distributing the work load equally amongst the worker instances for sentiment and graphical processing.

Twitter imitator:
This application was designed to imitate the twitter stream as a way to combat the twitter stream monthly cap on tweets for a student developer account with the twitter API, but also to serve as a control measure for the level of load on the worker applications by virtue of increasing the rate of tweets.

Worker:
This application was designed to be launched as an EC2 auto-scaling instance with AWS. It's purpose is to find out what work was allocated for it through the cache to be processed into an SVG pie chart displaying sentiments on an S3 bucket store.