@model ToolRental.ViewModels.RentalsIndexViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <style>
        /* Style the tab */
        .tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }

            /* Style the buttons that are used to open the tab content */
            .tab button {
                background-color: inherit;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 14px 16px;
                transition: 0.3s;
            }

                /* Change background color of buttons on hover */
                .tab button:hover {
                    background-color: #ddd;
                }

                /* Create an active/current tablink class */
                .tab button.active {
                    background-color: #ccc;
                }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 1px solid #ccc;
            border-top: none;
        }
    </style>
</head>

<script>
    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }



        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    window.onload = function () {
        document.getElementById("defaultTab").click();
    };

</script>
<h2>Index</h2>


<!-- Tab links -->
<div class="tab">
    <button class="tablinks" onclick="openCity(event, 'rentals')" id="defaultTab">Rentals</button>
    <button class="tablinks" onclick="openCity(event, 'history')">History</button>
</div>

<!-- Rentals Tab content -->
<div id="rentals" class="tabcontent">
    <h3>Rentals</h3>
    <p>
        @*@Html.ActionLink("Create New", "Create")*@

        <a href="@Url.Action("Create", "Rentals")" class="btn btn-default">
            <i class="fas fa-plus"></i> Create New
        </a>
    </p>
    <table class="table">

        @*Headings*@
        <tr>
            <th>
                Rental Id
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Date Rented
            </th>
            <th>
                Date Returned
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.CustomerRentalsList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RentalId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateRented)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateReturned)
                </td>
                <td>
                    @{
                        if (item.DateReturned == null)
                        {
                            <a href="@Url.Action("Return", "Rentals", new { id=item.RentalId })"
                               class="btn btn-default">
                                <i class="fas fa-exchange-alt"></i> Return
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Return", "Rentals", new { id=item.RentalId })"
                               class="btn btn-default" disabled>
                                <i class="fas fa-exchange-alt"></i> Return
                            </a>
                        }
                    }
                    <a href="@Url.Action("Edit", "Rentals", new { id=item.RentalId })"
                       class="btn btn-default">
                        <i class="fas fa-pencil-alt"></i> Edit
                    </a>
                    <a href="@Url.Action("Details", "Rentals", new { id=item.RentalId })"
                       class="btn btn-default">
                        <i class="fas fa-info"></i> Details
                    </a>
                    <a href="@Url.Action("Delete", "Rentals", new { id=item.RentalId })"
                       class="btn btn-default">
                        <i class="fas fa-trash"></i> Delete
                    </a>

                </td>
            </tr>
        }

    </table>
</div>
<!-- History Tab content -->
<div id="history" class="tabcontent">
    <h3>History</h3>
    <table class="table">

        @*Headings*@
        <tr>
            <th>
                Rental Id
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Date Rented
            </th>
            <th>
                Date Returned
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.CompletedRentals)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RentalId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateRented)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateReturned)
                </td>
            </tr>
        }

    </table>
</div>


@section scripts
{
    <script>
        $(function () {
            var successMessage = '@TempData["SuccessMessage"]'
            if (successMessage != '')
                alertify.success(successMessage);
        });
    </script>
}